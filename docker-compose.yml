version: "3.7"

services:
  zookeeper1:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper1
    expose:
      - 2181
    networks:
      - internal
    restart: always
    environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888

  zookeeper2:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper2
    expose:
      - 2181
    networks:
      - internal
    restart: always
    environment:
        ZOO_MY_ID: 2
        ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888

  zookeeper3:
    image: wurstmeister/zookeeper:latest
    hostname: zookeeper3
    expose:
      - 2181
    networks:
      - internal
    restart: always
    environment:
        ZOO_MY_ID: 3
        ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888

  kafka1:
    image: wurstmeister/kafka:latest
    hostname: kafka1
    expose:
      - 9092
    networks:
      - internal
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_BROKER_ID: 1

  kafka2:
    image: wurstmeister/kafka:latest
    hostname: kafka2
    expose:
      - 9092
    networks:
      - internal
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_BROKER_ID: 2

  kafka3:
    image: wurstmeister/kafka:latest
    hostname: kafka3
    expose:
      - 9092
    networks:
      - internal
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_BROKER_ID: 3

  database:
    build:
      context: mysql
      dockerfile: Dockerfile
    image: mysql:lastest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    expose:
      - 3306
    networks:
      - internal
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: kafka
      MYSQL_USER: saoh
      MYSQL_PASSWORD: 1234
    volumes:
      - ./mysql/data:/var/lib/mysql
  
  redis:
    image: redis:latest
    expose:
      - 6379
    restart: always
    networks:
      - internal

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    restart: always
    expose:
      - 3000
    networks:
      - internal
  
  backend1:
    build:
      context: backend1
      dockerfile: Dockerfile
    expose:
      - 3000
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - internal
    restart: always

  backend2:
    build:
      context: backend2
      dockerfile: Dockerfile
    expose:
      - 3000
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - database
      - redis
    networks:
      - internal
    restart: always

  backend3:
    build:
      context: backend2
      dockerfile: Dockerfile
    expose:
      - 3000
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - database
      - redis
    networks:
      - internal
    restart: always

  backend4:
    build:
      context: backend3
      dockerfile: Dockerfile
    expose:
      - 3000
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - redis
    networks:
      - internal
    restart: always

  reverse_proxy:
    build:
      context: reverse_proxy
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - frontend
      - backend1
      - backend2
      - backend3
      - backend4
    networks:
      - internal
    restart: always

networks:
  internal: